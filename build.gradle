//file:noinspection GroovyAssignabilityCheck
buildscript {
    repositories {
        maven { url 'https://maven.minecraftforge.net' }
        maven { url 'https://maven.parchmentmc.org' }
        maven { url 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'maven-publish'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'org.spongepowered.mixin'

archivesBaseName = "gugle-carpet-addition"
group = maven_group
version = mod_version + "-forge-1.18"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

//mixin {
//    add sourceSets.main, "gca.refmap.json"
//}

repositories {
    maven {
        url = "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    implementation "curse.maven:carpet-547361:${carpet_core_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'
}

minecraft {
    mappings channel: channel, version: channel_version
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                gca {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                gca {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'gca', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                gca {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
    exclude 'custom.refmap.json'
}

jar {
    manifest {
        attributes([
                "Specification-Title": "gca",
                "Specification-Vendor": "Gugle",
                "Specification-Version": "1",
                "Implementation-Title": project.mod_name,
                "Implementation-Version": project.mod_version,
                "Implementation-Vendor" :"Gugle",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "gca.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')